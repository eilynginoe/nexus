---
import Card from "./cardgeneralservices.astro";
import data from "../data/servicios.json";

interface Item {
    id: number;
    nombre: string;
    descripcion: string;
    categoria: string;
}

const categories: { [key: string]: Item[] } = {};

data.forEach((item: Item) => {
    if (!categories[item.categoria]) {
        categories[item.categoria] = [];
    }
    categories[item.categoria].push(item);
});
---

<div>
    {
        Object.keys(categories).map((category) => (
            <>
                <h2 class="titulo-categoria">{category}</h2>
                <div class="card-container">
                    {categories[category].map((item) => (
                        <Card
                            key={item.id}
                            nombre={item.nombre}
                            descripcion={item.descripcion}
                        />
                    ))}
                </div>
            </>
        ))
    }
</div>

<style>
    .titulo-categoria {
        font-family: "Fjalla One", sans-serif;
        font-size: 1.5em;
        margin-top: 3rem;
        margin-bottom: 16px;
        text-align: center;
    }

    .card-container {
        display: grid;
        grid-template-columns: 1fr; /* Una columna por defecto */
        gap: 16px; /* Espacio entre tarjetas */
        padding-bottom: 2rem;
    }

    .card-container .card {
        width: 100%; /* Aseg√∫rate de que las tarjetas ocupen todo el ancho del contenedor */
    }

    /* Media Query para pantallas mayores a 768px */
    @media (min-width: 768px) {
        .card-container {
            grid-template-columns: repeat(2, 1fr); /* Dos columnas */
        }
    }
    /* Media Query para pantallas mayores a 1200px (opcional) */
    @media (min-width: 1200px) {
        .card-container {
            width: 50vw;
            margin: 0 auto;
            justify-content: center;
        }
    }
</style>
